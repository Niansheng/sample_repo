[tool:multilint]
paths = .

[flake8]
# TODO: (DJANGO-UPGRADE) after upgrading to Django 2.0, include flake8-coding and set it to disallow 'coding:' lines
max-line-length = 119


ignore =
    # Missing docstrings
    D1,
    # Blank lines after docstring in case of nested class
    D202,
    # First line should be in imperative mood; try rephrasing
    D401,
    # No blank lines allowed between a section header and its content
    # https://github.com/PyCQA/pydocstyle/issues/412
    D412,
    # Line break before binary operator
    W503,
    # This check is raising false positives https://github.com/PyCQA/pycodestyle/issues/373
    E203,

exclude =
    .git,
    __pycache__,
    # Ignore migrations by default as they're mostly throw-away
    */*/migrations/*,
    # Ignore generated sql as these contain SQL that doesn't follow our line length rules
    # Ignore non-python directories
    data,
    deploy,
    docker,
    logs,
    media,
    node_modules,
    static

[isort]
## Configuring PyCharm to sort imports on save ##
#
# In order to make PyCharm run iSort each time the file is saved a file watcher needs to be configured.
# Steps:
# 0. Open a random .py file because PyCharm won't show all the possible scope options if you don't do this
# 1. Go to Preferences > Tools > File Watchers
# 2. Add new watcher (+ button or cmd+N): Choose the <custom> option
# 3. Fill the form with:
#     * Name: iSort
#     * Description: Sort imports in the current files
#     * Show console: error
#     * File type: Python
#     * Scope: Current File
#     * Program: the output of executing "which isort" on your console
#     * Arguments: $FilePath$
#     * Everything else should be deselected or empty
# 4. Apply

# For more settings check
# https://github.com/timothycrosley/isort/wiki/isort-Settings

# iSort will only change a file in place if the resulting file has correct Python syntax.
atomic=true

skip_glob=*/migrations/*,*/node_modules/*,*/bower_components/*

# An integer that represents the longest line-length you want a single import to take.
line_length=119

# Make compatible with black
# https://github.com/timothycrosley/isort#multi-line-output-modes
# 3 = Vertical Hanging Indent
multi_line_output=3
include_trailing_comma=true
force_grid_wrap=0
use_parentheses=true

# we need this so that isort works when PYTHONPATH is incorrect
known_first_party =
    algolia_integration
    authorisation
    commissions
    community
    country
    currency
    festicket
    inventory
    language
    livestreams
    magazine
    musicbrainz
    partner
    payments
    redirects
    report
    shop
    sql2rds
    store
    tickets
    translations
    util
    website

# for an unknown reason, isort and flake8-isort work differently unless the below line is included
known_third_party=six

default_section=THIRDPARTY
